/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;


import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import clases.ConsultaEnfermedades;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author capriatto
 */
public class principal extends javax.swing.JFrame {
    public ResultSet mostrarResultado;
    public ArrayList resultadoConsulta=new ArrayList();
    public ArrayList resultadoConsulta2=new ArrayList();
    public ArrayList resultadoConsulta3=new ArrayList();
    public ArrayList enfermedadSintomas=new ArrayList();
    public String primerSintoma;
    public String primerEnfermedad;
    public String enfermedad;
    public String idSintoma;
    public String idGravedad;
    public String idEnfermedad;
    DefaultTableModel model;
    String sql;
    Connection  con;
    PreparedStatement prepararConsulta;//Es el canal a través del cual se le envían instrucciones SQL
      
    /**
     * Creates new form principal
     */
    public principal() throws SQLException {
        this.con = bd.Conexion.getConexion();
        initComponents();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtPrimerSintoma = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtConsulta = new javax.swing.JTable();
        btnPrueba = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtEnfermedad = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtConsultaEnfermedad = new javax.swing.JTable();
        btnPrueba1 = new javax.swing.JButton();
        jTabbedPane4 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Farmacox");

        jTabbedPane1.addTab("Registrar venta", jTabbedPane2);

        jToolBar1.setRollover(true);

        jLabel4.setText("Digite el sintoma");

        txtPrimerSintoma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrimerSintomaKeyReleased(evt);
            }
        });

        jtConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jtConsulta);

        btnPrueba.setText("Consultar");
        btnPrueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPruebaActionPerformed(evt);
            }
        });

        jButton1.setText("Sintomas mas comunes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(12, 12, 12)
                        .addComponent(txtPrimerSintoma, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrueba)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPrimerSintoma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrueba)
                    .addComponent(jButton1))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToolBar1.add(jPanel1);

        jTabbedPane3.addTab("Sintoma", jToolBar1);

        jToolBar2.setRollover(true);

        jLabel5.setText("Digite enfermedad");

        txtEnfermedad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEnfermedadKeyReleased(evt);
            }
        });

        jtConsultaEnfermedad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jtConsultaEnfermedad);

        btnPrueba1.setText("Consultar");
        btnPrueba1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrueba1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(12, 12, 12)
                        .addComponent(txtEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrueba1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEnfermedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrueba1))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToolBar2.add(jPanel2);

        jTabbedPane3.addTab("Enfermedad", jToolBar2);

        jTabbedPane1.addTab("Consultar enfermedad por síntoma", jTabbedPane3);
        jTabbedPane1.addTab("Reportes", jTabbedPane4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrimerSintomaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrimerSintomaKeyReleased
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_txtPrimerSintomaKeyReleased

    private void btnPruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPruebaActionPerformed
        primerSintoma=txtPrimerSintoma.getText();
        consultarCodigo(primerSintoma);

        filtrar();
    }//GEN-LAST:event_btnPruebaActionPerformed

    private void txtEnfermedadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnfermedadKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnfermedadKeyReleased

    private void btnPrueba1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrueba1ActionPerformed
        enfermedad=txtEnfermedad.getText();
        primerSintoma=idEnfermedad;
        consultarGravedad(enfermedad);
        consultarCodigoEnfermedad(enfermedad);
            
      
        cargar();

    }//GEN-LAST:event_btnPrueba1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new principal().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrueba;
    private javax.swing.JButton btnPrueba1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTable jtConsulta;
    private javax.swing.JTable jtConsultaEnfermedad;
    private javax.swing.JTextField txtEnfermedad;
    private javax.swing.JTextField txtPrimerSintoma;
    // End of variables declaration//GEN-END:variables

    public void consultarCodigo(String primerSintoma) {
        sql = "SELECT id FROM sintoma WHERE nombre= ".concat(
                "\'").concat(primerSintoma).concat("\';");
        try {
            prepararConsulta = con.prepareStatement(sql);
            mostrarResultado = prepararConsulta.executeQuery();
            while (mostrarResultado.next()) {
                resultadoConsulta.add(mostrarResultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaEnfermedades.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("error");
        }

    }

    public void filtrar() {
        String[] titulos = {"POSIBLE ENFERMEDAD","GRAVEDAD","RECOMENDACION"};
        String[] registro = new String[3];
        for (int i = 0; i < resultadoConsulta.size(); i++) {
            idSintoma = String.valueOf(resultadoConsulta.get(i));
        }
        sql = "SELECT e.nombre,g.nombre,p.nombre FROM producto p,enfermedad e,enfermedad_sintoma es,gravedad g,sintoma s "
                + "WHERE s.id ="+idSintoma+"  AND s.id= es.sintoma_id AND e.id= es.enfermedad_id AND p.id=s.producto_id AND g.id=e.gravedad_id GROUP BY e.nombre;";
        try {
            model = new DefaultTableModel(null, titulos);
            prepararConsulta = con.prepareStatement(sql);
            mostrarResultado = prepararConsulta.executeQuery();
            while (mostrarResultado.next()) {
                enfermedadSintomas.add(mostrarResultado.getString(1));
                registro[0] = mostrarResultado.getString(1);
                registro[1] = mostrarResultado.getString(2);
                registro[2] = mostrarResultado.getString(3);
                model.addRow(registro);
            }
            jtConsulta.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void cargar() {
        String[] titulos = {"ENFERMEDAD", "GRAVEDAD", "RECOMENDACION"};
        String[] registro = new String[3];
        for (int i = 0; i < resultadoConsulta2.size(); i++) {
            idGravedad = String.valueOf(resultadoConsulta2.get(i));
        }
        for(int i=0;i<resultadoConsulta3.size();i++){
            idEnfermedad=String.valueOf(resultadoConsulta3.get(i));
        }
        sql = "SELECT e.nombre,g.nombre,p.nombre FROM sintoma s,enfermedad e,producto p,gravedad g,enfermedad_sintoma es WHERE e.id= "+idEnfermedad+" AND e.id=es.enfermedad_id AND s.producto_id=p.id AND g.id= "+idGravedad+" AND s.id = es.sintoma_id GROUP BY p.nombre;";
        try {
            model = new DefaultTableModel(null, titulos);
            prepararConsulta = con.prepareStatement(sql);
            mostrarResultado = prepararConsulta.executeQuery();
            while (mostrarResultado.next()) {
                registro[0] = mostrarResultado.getString(1);
                registro[1] = mostrarResultado.getString(2);
                registro[2]=mostrarResultado.getString(3);
                model.addRow(registro);
            }
            jtConsultaEnfermedad.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    public void consultarGravedad(String enfermedad) {
        sql = "SELECT gravedad_id FROM enfermedad WHERE nombre= ".concat(
                "\'").concat(enfermedad).concat("\';");
        try {
            prepararConsulta = con.prepareStatement(sql);
            mostrarResultado = prepararConsulta.executeQuery();
            while (mostrarResultado.next()) {
                resultadoConsulta2.add(mostrarResultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaEnfermedades.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("error");
        }

    }
    
     public void consultarCodigoEnfermedad(String primerEnfermedad) {
        sql = "SELECT id FROM enfermedad WHERE nombre= ".concat(
                "\'").concat(primerEnfermedad).concat("\';");
        try {
            prepararConsulta = con.prepareStatement(sql);
            mostrarResultado = prepararConsulta.executeQuery();
            while (mostrarResultado.next()) {
                resultadoConsulta3.add(mostrarResultado.getString(1));
                System.out.println(mostrarResultado.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ConsultaEnfermedades.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("error");
        }

    }
}
